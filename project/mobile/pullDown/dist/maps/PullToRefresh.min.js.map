{"version":3,"sources":["PullToRefresh.js"],"names":["until","Object","assign","throttle","that","fn","delay","atleast","timer","previous","now","Date","call","clearTimeout","arguments","length","undefined","key","obj1","toString","deepMerge","obj2","merge","_len","arr","Array","_key","item","obj","prefixStyle","_elementStyle","document","createElement","style","_vendor","i","vendors","l","substr","transform","transitionDuration","defaults","dampRate","set","height","contentdown","contentover","contentfresh","success","up","_classCallCheck","this","PullToRefresh","options","pull","querySelector","container","contentnomore","dom","offsetHeight","scrollBox","children","progress","data","firstFull","canPull","pullLoadding","preY","starX","starY","pullHeight","canRefresh","init","classList","upLoading","domHeight","pullBox","add","visibility","createPullBox","createUpbox","progressTxt","firstLoad","pullEvent","scrollBoxColor","getComputedStyle","backgroundColor","upBox","className","innerHTML","childHeight","loadMore","onscroll","flag","scrollTop","scrollHeight","callback","insertBefore","UpNoMore","showPullSuc","remove","setTimeout","_this","refreshSuccess","translate","_this2","initUpLoading","_this3","start","e","changedTouches","clientY","clientX","move","toucheX","toucheY","diff","moveX","moveY","Math","preventDefault","round","end","pullRefresh","addEventListener","h","duration","rotate","scrollToTop"],"mappings":"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","file":"../js/PullToRefresh.min.js","sourcesContent":["const until=Object.assign(until || {},{\r\n    throttle(that, fn, delay, atleast){         //函数节流\r\n        let timer = null;\r\n        let previous = null;\r\n        return function() {\r\n            var now = +new Date();\r\n            if (!previous) previous = now;\r\n            if (atleast && now - previous > atleast) {\r\n                fn.call(that)\r\n                // 重置上一次开始时间为本次结束时间\r\n                previous = now;\r\n                clearTimeout(timer);\r\n            } else {\r\n                clearTimeout(timer);\r\n                timer = setTimeout(function() {\r\n                    fn.call(that)\r\n                    previous = null;\r\n                }, delay);\r\n            }\r\n        }\r\n    },\r\n    deepMerge:(function(){  //深度合并object\r\n        const merge = (obj1,obj2={})=>{\r\n            let key=\"\";\r\n            for(key in obj2) {\r\n                // 如果target(也就是obj1[key])存在，且是对象的话再去调用deepMerge，否则就是obj1[key]里面没这个对象，需要与obj2[key]合并\r\n                obj1[key] = obj1[key] && obj1[key].toString() === \"[object Object]\" ?\r\n                until.deepMerge(obj1[key], obj2[key]) : obj1[key] = obj2[key];\r\n            }\r\n        }\r\n        return function(...arr){\r\n            let obj={};\r\n            arr.forEach((item)=>{\r\n                merge(obj,item)\r\n            })\r\n            return obj\r\n        }\r\n    })(),\r\n    prefixStyle:(function(){        //css3兼容      \r\n        const _elementStyle = document.createElement('div').style;\r\n        const _vendor = (function() {\r\n            let vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\r\n                transform,\r\n                i = 0,\r\n                l = vendors.length;\r\n\r\n            for (; i < l; i++) {\r\n                transform = vendors[i] + 'ransform';\r\n                if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);\r\n            }\r\n            return false;\r\n        })();\r\n        return style =>{\r\n            if (_vendor === false) return false;\r\n            if (_vendor === '') return style;\r\n            return _vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n\r\n        }\r\n    })()\r\n})\r\n\r\nconst transform = until.prefixStyle('transform');\r\nconst transitionDuration = until.prefixStyle('transitionDuration');\r\n\r\n/*\r\ncontainer:容器\r\npull.set:是否启用上拉（下拉）；\r\npull.height:下拉height，触发刷新\r\npull.callback:满足下拉或上拉条件时触发\r\npull.dampRate:阻尼\r\n*/\r\n/*方法  参数为true说明还可以继续操作，为false时说明已经没有数据了\r\n.endUpLoading(flag)  //上拉加载完成后调用\r\n.endPullRefresh(flag)  //下拉刷新 完成后调用\r\n*/\r\nconst defaults = {\r\n    container:\"body\",\r\n    pull:{\r\n        dampRate:0.4,\r\n        set:true,\r\n        height:60,\r\n        contentdown:\"下拉刷新\",\r\n        contentover:\"释放刷新\",\r\n        contentfresh:\"刷新中……\",\r\n        success:\"刷新成功\"\r\n    },\r\n    up:{\r\n        set:true,\r\n        height:120,\r\n        contentfresh:\"正在加载……\",\r\n        contentnomore:\"没有更多数据了\"\r\n    }\r\n\r\n}\r\n/*下拉刷新，上拉加载*/\r\nclass PullToRefresh{\r\n    constructor(options){\r\n        this.options=until.deepMerge({},until.deepMerge(defaults, options));\r\n        if(!!!options.pull || !this.options.pull.set){      //如果没有设置pull，则默认不启用下拉刷新\r\n            this.options.pull.set=false;\r\n        }\r\n        if(!!!options.up || !this.options.up.set){          //同上\r\n            this.options.up.set=false\r\n        }\r\n        this.dom=document.querySelector(this.options.container)\r\n        this.domHeight=this.dom.offsetHeight\r\n        this.scrollBox=this.dom.children[0]\r\n        this.progress=null\r\n        this.data={             //存放数据和状态\r\n            upLoading:false,    //是否增在加载更多\r\n            firstFull:false,    //第一次调用加载时内容是否大于容器，false则继续加载，知道大于为止\r\n            canPull:true,       //是否可以下拉\r\n            pullLoadding:false, //当前是否正在刷新\r\n            preY:0,             //存放上一次的Y坐标\r\n            starX:0,            //存放开始滑动时的坐标\r\n            starY:0,\r\n            pullHeight:0,       //存放下拉的高度\r\n            canRefresh:false,  //能否刷新\r\n        }  \r\n        this.init()\r\n    }\r\n    init(){     \r\n        this.dom.classList.add(\"refreshWrap\")\r\n\r\n        this.createPullBox();\r\n        this.createUpbox();\r\n        \r\n        this.firstLoad()\r\n        this.loadMoreEvent();\r\n\r\n        this.pullEvent()\r\n    }\r\n    firstLoad(){  //初始化组件时，要判断是否需要加载内容来让内容大于滚动容器的高度\r\n        const childHeight=this.scrollBox.offsetHeight;\r\n        if(childHeight<this.domHeight+this.options.up.height && !this.data.firstFull){      //滚动元素小于滚动容器\r\n            this.loadMore(true)\r\n        }else{\r\n            this.data.firstFull=true;\r\n        }\r\n    }\r\n    createPullBox(){    //创建下拉\r\n        if(!this.options.pull.set) return false;\r\n        this.pullBox=document.createElement(\"DIV\");\r\n        this.pullBox.className=\"refresh\";\r\n        this.pullBox.style.visibility=\"hidden\"; //隐藏下拉刷新\r\n        this.pullBox.innerHTML=`<i class=\"loading\"></i><p class=\"loadTxt\">${this.options.pull.contentdown}</p>`;\r\n        this.dom.insertBefore(this.pullBox,this.scrollBox)\r\n        this.progress=this.pullBox.querySelector(\".loading\")\r\n        this.progressTxt=this.pullBox.querySelector(\".loadTxt\")\r\n    }\r\n    createUpbox(){      //创建上拉加载\r\n        if(!this.options.up.set) return false;\r\n        const scrollBoxColor=getComputedStyle(this.scrollBox).backgroundColor;\r\n        this.upBox=document.createElement(\"DIV\")\r\n        this.upBox.className=\"loadingBox\"\r\n        this.upBox.style.backgroundColor=scrollBoxColor      //设置和滚动元素一样的背景，防止露底\r\n        this.upBox.innerHTML=`<i class=\"loading rotate\"></i><p class=\"loadTxt\">${this.options.up.contentfresh}</p>`\r\n        this.dom.appendChild(this.upBox)\r\n    }\r\n    loadMoreEvent(){//上拉加载\r\n        const box=this.dom;\r\n        this.dom.onscroll=until.throttle(this, this.loadMore, 200, 250)\r\n    }\r\n    loadMore(flag=false){   //加载更多  flag为true是可以跳过判断，直接加载更多\r\n        if(this.data.upLoading) return false;\r\n        const scrollTop=this.dom.scrollTop,\r\n              scrollHeight=this.dom.scrollHeight;\r\n        if(scrollTop+this.domHeight+this.options.up.height>=scrollHeight || flag){\r\n            this.data.upLoading=true\r\n            this.options.up.callback && this.options.up.callback()\r\n        }\r\n    }\r\n    endUpLoading(flag=true){        //更新上拉状态,flag判断是否还有更多\r\n        if(flag){\r\n            this.data.upLoading=false;\r\n            if(!this.data.firstFull) this.firstLoad();          \r\n        }else{      //没有数据\r\n            this.UpNoMore()\r\n        }\r\n    }\r\n    endPullRefresh(flag=true){       //刷新成功（外部调用）\r\n        this.showPullSuc(flag)\r\n    }\r\n    showPullSuc(flag){\r\n        //显示刷新成功并更改图标\r\n        this.progress.classList.add(\"success\")\r\n        this.progress.style[transform] = `rotate(45deg)`\r\n        this.progressTxt.innerText=this.options.pull.success\r\n\r\n        this.progress.classList.remove(\"rotate\")\r\n\r\n        setTimeout(()=>{\r\n            this.refreshSuccess(flag)\r\n        },1000)\r\n    }\r\n    refreshSuccess(flag){      //刷新成功，重置参数\r\n        this.data.pullLoadding=false;\r\n        this.translate(0,300)\r\n        this.data.pullHeight=0\r\n        this.dom.scrollTop=0\r\n        setTimeout(()=>{this.progress.classList.remove(\"success\")},100)     //移除刷新成功的√\r\n        \r\n        if(!flag){      //刷新时没有数据\r\n            this.pullBox.style.visibility=\"hidden\" //隐藏下拉刷新\r\n            this.UpNoMore();\r\n            return false;\r\n        }\r\n        /*重置上拉加载的参数*/\r\n        this.initUpLoading()\r\n        setTimeout(()=>{     \r\n            this.firstLoad();   //下一次渲染的时候判断是否需要加载更多\r\n            this.pullBox.style.visibility=\"hidden\" //隐藏下拉刷新\r\n        },100)\r\n    }\r\n    UpNoMore(){\r\n        this.upBox.classList.add(\"noMore\")\r\n        this.upBox.querySelector(\".loadTxt\").innerHTML=this.options.up.contentnomore\r\n    }\r\n    pullEvent(){            //为下拉刷新绑定事件\r\n        if(!this.options.pull.set) return false;\r\n        const start = e => {\r\n            const scrollTop=this.dom.scrollTop;\r\n            this.data.canPull=scrollTop>0?false:true       //根据滚动到顶部判断是否可以启用下拉\r\n            this.data.preY=this.data.starY = e.changedTouches[0].clientY || e.clientY\r\n            this.data.starX = e.changedTouches[0].clientX || e.clientX\r\n        }   \r\n        const move = e =>{\r\n            const scrollTop=this.dom.scrollTop;\r\n            if(this.data.pullLoadding || !this.data.canPull) return false;      //当前不是下拉状态活不是正在刷新状态\r\n            this.pullBox.style.visibility=\"visible\"; //隐藏下拉刷新\r\n            const toucheX=e.changedTouches[0].clientX || e.clientX,\r\n                  toucheY=e.changedTouches[0].clientY || e.clientY;\r\n            const diff=toucheY-this.data.preY;  //当前移动点相对于上一次移动点的位移\r\n            this.data.preY=toucheY\r\n            const moveX=toucheX-this.data.starX,    //记录移动的距离\r\n                  moveY=toucheY-this.data.starY;\r\n            if(Math.abs(moveX)>Math.abs(moveY)){        //左右滑动\r\n                return false\r\n            }\r\n            if(moveY<0){        //向上移动 \r\n                this.data.canPull=false\r\n                return false \r\n            }   \r\n            e.preventDefault();\r\n            if(this.options.pullHeight<this.options.pull.height){       //没有到达可以刷新的距离\r\n                this.data.pullHeight+=diff\r\n            }else{                  //到达可以刷新的高度\r\n                if(diff<0){     \r\n                    this.data.pullHeight+=diff\r\n                }else{\r\n                    this.data.pullHeight+=diff*this.options.pull.dampRate\r\n                }               \r\n            }\r\n            this.data.pullHeight=Math.round(this.data.pullHeight)\r\n            this.translate(this.data.pullHeight)\r\n            this.progressRote(this.data.pullHeight)\r\n        }   \r\n        const end = e =>{\r\n            const scrollTop=this.dom.scrollTop;\r\n            if(this.data.pullLoadding) return false;  //当前是正在刷新状态\r\n            if(!this.data.canPull){       //当前不是下拉状态\r\n                if(this.data.pullHeight!=0){\r\n                    this.data.pullHeight=0;\r\n                    this.translate(0,0)\r\n                }\r\n                return false\r\n            }\r\n            this.preY=0;\r\n            this.starY=0;\r\n            this.starX=0;\r\n            if(this.data.canRefresh){       //刷新\r\n                this.pullRefresh()\r\n            }else{      //不刷新\r\n                this.pullBox.style.visibility=\"hidden\"; //隐藏下拉刷新\r\n                this.data.pullHeight=0;\r\n                this.translate(0,300)\r\n                this.dom.scrollTop=0\r\n            }\r\n        }\r\n        this.dom.addEventListener('touchstart',e=>{\r\n            start(e)\r\n        }, false)\r\n        this.dom.addEventListener('touchmove',e=> {\r\n            move(e)\r\n        }, false);\r\n        this.dom.addEventListener('touchend',e => {\r\n            end(e)\r\n        }, false)\r\n    }\r\n    pullRefresh(){          //刷新\r\n        this.data.pullLoadding=true\r\n        this.translate(this.options.pull.height,300)\r\n        this.data.pullHeight=this.options.pull.height\r\n        this.progressTxt.innerText=this.options.pull.contentfresh\r\n        this.options.pull.callback && this.options.pull.callback()\r\n        this.progress.classList.add(\"rotate\")\r\n    }\r\n    translate(h=0,duration=0){\r\n        this.upBox.style[transitionDuration] =`${duration}ms`\r\n        this.upBox.style[transform] = `translate3d(0,${h}px,0)`\r\n        this.scrollBox.style[transitionDuration] =`${duration}ms`\r\n        this.scrollBox.style[transform] = `translate3d(0,${h}px,0)`\r\n    }\r\n    progressRote(h=0){          //更改下拉刷新的文字和动画\r\n        const r=360;\r\n        let rotate=r*h/this.options.pull.height\r\n        this.progress.style[transform] = `rotate(${rotate}deg)`\r\n        if(h>=this.options.pull.height){        //可以刷新\r\n            if(!this.data.canRefresh){\r\n                this.progressTxt.innerText=this.options.pull.contentover\r\n                this.data.canRefresh=true\r\n            }\r\n            return false               \r\n        }else{          //不可以刷新\r\n            if(this.data.canRefresh){\r\n                this.progressTxt.innerText=this.options.pull.contentdown\r\n                this.data.canRefresh=false\r\n            }\r\n            return false              \r\n        }\r\n    }\r\n    initUpLoading(){  //重置上拉加载的状态        \r\n        this.data.firstFull=false\r\n        this.data.upLoading=false\r\n        this.upBox.classList.remove(\"noMore\")\r\n        this.upBox.querySelector(\".loadTxt\").innerHTML=this.options.up.contentfresh\r\n    }\r\n    scrollToTop(){\r\n        this.dom.scrollTop=0\r\n    }\r\n    triggerPullLoading(){       //主动触发刷新\r\n        if(!this.options.pull.set) return false;\r\n        this.pullBox.style.visibility=\"visible\"\r\n        this.scrollToTop()\r\n        this.pullRefresh()\r\n    }\r\n    triggerUpLoading(){         //主动触发上拉加载\r\n        this.initUpLoading()\r\n        this.loadMore(true)\r\n    }\r\n}\r\n"]}